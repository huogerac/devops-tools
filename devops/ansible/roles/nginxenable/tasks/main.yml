---

- name: Upgrade system
  become: yes
  apt: upgrade=dist update_cache=yes

# - name: Install nginx
#   become: yes
#   apt: name=python-simplejson state=latest

- name: install letsencrypt
  become: yes
  apt: name=letsencrypt state=latest

- name: create letsencrypt directory
  become: yes
  file: name=/var/www/letsencrypt state=directory

- name: Ensure nginx service is started
  service:
    name: nginx
    state: started
    enabled: yes

- name: Remove default nginx config
  become: yes
  file: name=/etc/nginx/sites-enabled/default state=absent

- name: Install nginx site for letsencrypt requests
  become: yes
  template:
    src: "nginx/nginx-http.conf"
    dest: "/etc/nginx/sites-enabled/http"
  notify:
    - reload nginx

- name: Create letsencrypt certificate
  become: yes
  shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}

- name: Generate dhparams
  become: yes
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

- name: Setup nginx backend API conf
  become: yes
  template:
    src: "nginx/django.conf"
    dest: "/etc/nginx/sites-available/django_{{ project_version }}"

- name: Remove default http config
  become: yes
  file: name=/etc/nginx/sites-enabled/http state=absent

- name: Enable the nginx backend API
  become: yes
  file:
    src: "/etc/nginx/sites-available/django_{{ project_version }}"
    dest: "/etc/nginx/sites-enabled/django_{{ project_version }}"
    state: link
  notify:
    - reload nginx

- name: Add letsencrypt cronjob for cert renewal
  become: yes
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload
